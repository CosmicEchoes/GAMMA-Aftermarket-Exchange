
-- Big thanks to Grok and Darkasleif for essentially letting me defile their code for my own purposes
-- Also double thanks to Darkasleif for providing help with getting this mess to work

--[[
		UTILITY
--]]

local dte = demonized_time_events
local parts_reward_table = {}

function actor_has_gun(tbl)
	gun_to_remove = nil
	to_return = nil
	condition = nil
	part_return = {}
	for k,v in pairs(tbl) do
		local avail = mlr_utils.have_item(k, 1)
		if avail then
			obj = db.actor:object(k)
			condition = obj:condition()
			to_return = k
			
			if IsWeapon(obj) and (not IsMelee(obj)) then
				local parts_condition = item_parts.get_parts_con(obj)
				parts_reward_table = {}
				for i, value in pairs(parts_condition) do
					parts_reward_table[i] = value
				end
			end
			
		end
	end
	
	return to_return,condition
end


function degrade_gun(sec, condition)
	local parts = nil
	local parts_table = {}

	obj = db.actor:object(sec)
	local obj_id = obj:id()
	
	if obj and condition then
		parts = item_parts.get_parts_con(obj, nil, true)
		local saved_parts = se_load_var(obj_id, nil, "parts")
		if parts then
			for i, part in pairs(parts) do
				parts_table[i] = part
				parts_table[i] = parts_reward_table[i] or parts_table[i]
				saved_parts[i] = parts_table[i]
			end
		end
		item_parts.set_parts_con(obj_id, saved_parts)
		obj:set_condition(condition)
	end
	return true
end


function exchange_gun(first_speaker, second_speaker,table)
	gun_to_remove,reward_condition,reward_parts = actor_has_gun(table)
	reward_gun = table["reward"]
	trade_cost = table["cost"]

	if gun_to_remove and db.actor:money() >= trade_cost then
        dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, gun_to_remove)
        dialogs.relocate_money_from_actor(first_speaker, second_speaker, trade_cost)
        dialogs.relocate_item_section_to_actor(first_speaker, second_speaker, reward_gun)
		
		dte.CreateTimeEvent("aftermarket_exchange_trade", "aftermarket_exchange_trade_degrade_gun", 0.25, degrade_gun, reward_gun, reward_condition)
    end
end




--[[
		EXCHANGES
--]]


function sks_tactical(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.sks_tactical
	exchange_gun(first_speaker,second_speaker,table)
end 


function sks_molot(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.sks_molot
	exchange_gun(first_speaker,second_speaker,table)
end 


function pkm_zulu(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.pkm_zulu
	exchange_gun(first_speaker,second_speaker,table)
end 


function toz34_hunter(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.toz34_hunter
	exchange_gun(first_speaker,second_speaker,table)
end 


function toz34_bear(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.toz34_bear
	exchange_gun(first_speaker,second_speaker,table)
end 


function m4a1_butcher(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.m4a1_butcher
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak74m_beard(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak74m_beard
	exchange_gun(first_speaker,second_speaker,table)
end 


function ar15_hera(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ar15_hera
	exchange_gun(first_speaker,second_speaker,table)
end 


function aug_commando(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.aug_commando
	exchange_gun(first_speaker,second_speaker,table)
end 


function sa58_osw(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.sa58_osw
	exchange_gun(first_speaker,second_speaker,table)
end 


function pp2000_op(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.pp2000_op
	exchange_gun(first_speaker,second_speaker,table)
end 


function sr2m_rail(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.sr2m_rail
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak104_alfa(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak104_alfa
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak74u_tac(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak74u_tac
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak105_shakal(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak105_shakal
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak74_pmc(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak74_pmc
	exchange_gun(first_speaker,second_speaker,table)
end 


function groza_dolg(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.groza_dolg
	exchange_gun(first_speaker,second_speaker,table)
end 


function svds_pmc(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.svds_pmc
	exchange_gun(first_speaker,second_speaker,table)
end 

function ks23_eco(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ks23_eco
	exchange_gun(first_speaker,second_speaker,table)
end 

function saiga12_nerd(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.saiga12_nerd
	exchange_gun(first_speaker,second_speaker,table)
end 


function vss_savant(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.vss_savant
	exchange_gun(first_speaker,second_speaker,table)
end 


function saiga12_dush(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.saiga12_dush
	exchange_gun(first_speaker,second_speaker,table)
end 


function saiga_isg(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.saiga_isg
	exchange_gun(first_speaker,second_speaker,table)
end 


function m4a1_tac(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.m4a1_tac
	exchange_gun(first_speaker,second_speaker,table)
end 


function g36c_merc(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.g36c_merc
	exchange_gun(first_speaker,second_speaker,table)
end 


function vss_merc(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.vss_merc
	exchange_gun(first_speaker,second_speaker,table)
end 


function scar_expo(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.scar_expo
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak5c_isg(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak5c_isg
	exchange_gun(first_speaker,second_speaker,table)
end 


function rd47_isg(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.rd47_isg
	exchange_gun(first_speaker,second_speaker,table)
end 


function rd74_isg(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.rd74_isg
	exchange_gun(first_speaker,second_speaker,table)
end 

function rd9x39_isg(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.rd9x39_isg
	exchange_gun(first_speaker,second_speaker,table)
end 

function rd74u_tactic(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.rd74u_tactic
	exchange_gun(first_speaker,second_speaker,table)
end 

function akmono_1(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.akmono_1
	exchange_gun(first_speaker,second_speaker,table)
end 

function akmono_2(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.akmono_2
	exchange_gun(first_speaker,second_speaker,table)
end 

function aug_cqb(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.aug_cqb
	exchange_gun(first_speaker,second_speaker,table)
end 


function ak105_swamp(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.ak105_swamp
	exchange_gun(first_speaker,second_speaker,table)
end 

function dvl10_sneaky(first_speaker, second_speaker)
	local table = aftermarket_exchange_convert.dvl10_sneaky
	exchange_gun(first_speaker,second_speaker,table)
end 

